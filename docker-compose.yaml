version: "3.7"

services:
  # Manages the files (upload, delete, modify) 
  data_management:
    build: 
      context: ./backend/data_management/
      target: debug #debug mode with nodemon running!
    volumes: 
      - ./backend/data_management/src/:/work/src/
      - ./files/:/work/files/
    ports:
      - 6000:6000

  # Manages the microservices (upload, use)
  service_management:
    build:
      context: ./backend/service_management/
      target: debug #debug mode with nodemon running!
    volumes:
      - ./backend/service_management/src/:/work/src/
      - ./files/:/work/files/
      - ./microservices/:/work/services/
    ports:
      - 6001:6001

  # Stores metadata of the exposed microservices
  service_db:
    image: mongo:latest
    restart: always
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 27017:27017  

  # # vue frontend // platform
  # frontend:
  #   build:
  #     context: ./frontend/
  #     target: debug #debug mode with serve
  #   volumes:
  #     - ./frontend/src/:/work/src/
  #   ports: 
  #     - 8080:8080

  # kafka is built on zookeeper
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  # api gateway
  kong:
    image: kong:latest
    volumes:
      - ./kong.yaml:/kong.yaml
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong.yaml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000 
      - 8443:8443 
      - 127.0.0.1:8001:8001 
      - 127.0.0.1:8444:8444 